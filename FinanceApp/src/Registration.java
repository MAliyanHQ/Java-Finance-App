
import java.awt.Toolkit;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JOptionPane;

public class Registration extends javax.swing.JFrame {

    /**
     * Creates new form Registration
     */
    public Registration() {
        setIconImage();
        initComponents();
    }
    // setting icon
    private void setIconImage() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/favicon.png")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        rname = new javax.swing.JTextField();
        ruid = new javax.swing.JTextField();
        rpin = new javax.swing.JPasswordField();
        rgender = new java.awt.Choice();
        rrole = new java.awt.Choice();
        registeruser = new javax.swing.JButton();
        registered = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Registration - Sukoon Finance App");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(45, 49, 66));

        jLabel1.setForeground(new java.awt.Color(219, 228, 238));
        jLabel1.setText("Full Name");

        jLabel2.setForeground(new java.awt.Color(219, 228, 238));
        jLabel2.setText("UID");

        jLabel3.setForeground(new java.awt.Color(219, 228, 238));
        jLabel3.setText("User Pin");

        jLabel4.setForeground(new java.awt.Color(219, 228, 238));
        jLabel4.setText("Gender");

        jLabel6.setForeground(new java.awt.Color(219, 228, 238));
        jLabel6.setText("Role");

        rname.setBackground(new java.awt.Color(219, 228, 238));
        rname.setForeground(new java.awt.Color(45, 49, 66));
        rname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                rnameKeyPressed(evt);
            }
        });

        ruid.setBackground(new java.awt.Color(219, 228, 238));
        ruid.setForeground(new java.awt.Color(45, 49, 66));

        rpin.setBackground(new java.awt.Color(219, 228, 238));
        rpin.setForeground(new java.awt.Color(45, 49, 66));

        rgender.add("Male");
        rgender.add("Female");
        rgender.setBackground(new java.awt.Color(219, 228, 238));
        rgender.setForeground(new java.awt.Color(45, 49, 66));

        rrole.add("Employee");
        rrole.add("Businessman");
        rrole.add("Student");
        rrole.add("Dependent on spouse");
        rrole.setBackground(new java.awt.Color(219, 228, 238));
        rrole.setForeground(new java.awt.Color(45, 49, 66));

        registeruser.setBackground(new java.awt.Color(180, 34, 242));
        registeruser.setForeground(new java.awt.Color(255, 255, 255));
        registeruser.setText("Register");
        registeruser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registeruserActionPerformed(evt);
            }
        });

        registered.setBackground(new java.awt.Color(219, 228, 238));
        registered.setText("Already Registered?");
        registered.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registeredActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(registeruser, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                        .addComponent(registered))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6))
                        .addGap(39, 39, 39)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ruid, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                            .addComponent(rname)
                            .addComponent(rpin)
                            .addComponent(rrole, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(rgender, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(rname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(ruid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(rpin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4))
                    .addComponent(rgender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rrole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(registeruser)
                    .addComponent(registered))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel1.getAccessibleContext().setAccessibleName("");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    //writing basic details to uid file. name will be uid.txt
    static boolean writeFile(String name, String uid, String pin, char gender, String role) throws IOException {
        File f1 = new File(uid + ".txt");
        if (f1.createNewFile()) {
            FileWriter wf = new FileWriter(uid + ".txt");
            wf.write(uid + "\n" + pin + "\n" + name + "\n" + gender + "\n" + role + "\n");
            wf.close();
            return true;
        } else {
            return false;
        }
    }
    // adding more details to file depending on role
    static void appendFile(String uid, String companyname, String jobtitle, double income) throws IOException {
        FileWriter af = new FileWriter(uid + ".txt", true);
        af.write(0 + "\n" + companyname + "\n" + jobtitle + "\n" + income + "\n");
        af.close();
    }

    static void appendFile(String uid, String businessoreducation, double income) throws IOException {
        FileWriter af = new FileWriter(uid + ".txt", true);
        af.write(0 + "\n" + businessoreducation + "\n" + income + "\n");
        af.close();
    }

    static void appendFile(String uid, double income) throws IOException {
        FileWriter af = new FileWriter(uid + ".txt", true);
        af.write(0 + "\n" + income + "\n");
        af.close();
    }


    private void registeruserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registeruserActionPerformed
        //register user depending on data
        boolean validInput = false; 
        String wname = rname.getText();
        String wuid = ruid.getText();
        char[] wepin = rpin.getPassword();
        String wpin = "";
        //enter character input on pin
        for (int i = 0; i < 4; i++) {
            wpin += wepin[i];
        }
        if ("".equals(wname) || "".equals(wuid)) {
            JOptionPane.showMessageDialog(rootPane, "Field could not be empty!");
        }
        else {
            char wgender = (rgender.getSelectedIndex() == 0) ? 'M' : 'F';
            String wrole = rrole.getSelectedItem();
            boolean uidcheck = false;
            if (wepin.length != 4) {
                JOptionPane.showMessageDialog(rootPane, "Pin Length should be 4");
            } else {
                try {
                    uidcheck = writeFile(wname, wuid, wpin, wgender, wrole);
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(rootPane, ex.getMessage());
                }
                if (uidcheck == true) {
                    User loggeduser;
                    JOptionPane.showMessageDialog(rootPane, "User Registered!");
                    switch (wrole) {
                        case "Employee":
                            String wcompanyname = null,
                             wjobtitle = null;
                            double wsalary = 0d;
                            while (wcompanyname == null) {
                                wcompanyname = JOptionPane.showInputDialog(rootPane, "Your Company name: ");
                            }
                            while (wjobtitle == null) {
                                wjobtitle = JOptionPane.showInputDialog(rootPane, "Your Job Title name: ");
                            }
                            while (!validInput) {
                                try {
                                    while (wsalary == 0d) {
                                        try {
                                            wsalary = Double.parseDouble(JOptionPane.showInputDialog(rootPane, "Your Salary: "));
                                        } catch (NullPointerException ex) {
                                            JOptionPane.showMessageDialog(rootPane, "Input is null");
                                        }
                                    }
                                    validInput = true;
                                } catch (NumberFormatException ex) {
                                    JOptionPane.showMessageDialog(rootPane, "Input should be number");
                                }
                            }
                            try {
                                appendFile(wuid, wcompanyname, wjobtitle, wsalary - 1);
                            } catch (IOException ex) {
                                JOptionPane.showMessageDialog(rootPane, ex.getMessage());
                            }
                            break;

                        case "Businessman":
                            String wbusinessname = null;
                            double wincome = 0d;
                            while (wbusinessname == null) {
                                wbusinessname = JOptionPane.showInputDialog(rootPane, "Your Business Title: ");
                            }
                            while (!validInput) {
                                try {
                                    while (wincome == 0d) {
                                        try {
                                            wincome = Double.parseDouble(JOptionPane.showInputDialog(rootPane, "Your Average Income: "));
                                        } catch (NullPointerException ex) {
                                            JOptionPane.showMessageDialog(rootPane, "Input is null");
                                        }
                                        validInput = true;
                                    }
                                } catch (NumberFormatException ex) {
                                    JOptionPane.showMessageDialog(rootPane, "Input should be number");
                                }
                            }
                            try {
                                appendFile(wuid, wbusinessname, wincome - 1);
                            } catch (IOException ex) {
                                JOptionPane.showMessageDialog(rootPane, ex.getMessage());
                            }
                            break;
                        case "Student":
                            String weducationlvl = null;
                            double wpocketmoney = 0d;
                            while (weducationlvl == null) {
                                weducationlvl = JOptionPane.showInputDialog(rootPane, "Your Education Level: ");
                            }
                            while (!validInput) {
                                try {
                                    while (wpocketmoney == 0d) {
                                        try {
                                            wpocketmoney = Double.parseDouble(JOptionPane.showInputDialog(rootPane, "Your Daily Pocket Money : "));
                                        } catch (NullPointerException ex) {
                                            JOptionPane.showMessageDialog(rootPane, "Input is null");
                                        }
                                        validInput = true;
                                    }
                                } catch (NumberFormatException ex) {
                                    JOptionPane.showMessageDialog(rootPane, "Input should be number");
                                }
                            }
                            wpocketmoney *= 30;
                            try {
                                appendFile(wuid, weducationlvl, wpocketmoney - 1);
                            } catch (IOException ex) {
                                JOptionPane.showMessageDialog(rootPane, ex.getMessage());
                            }
                            break;
                        case "Dependent on spouse":
                            double wmonthlyallowance = 0d;
                            while (!validInput) {
                                try {
                                    while (wmonthlyallowance == 0d) {
                                        try {
                                            wmonthlyallowance = Double.parseDouble(JOptionPane.showInputDialog(rootPane, "Your Monthly Allowance: "));
                                        } catch (NullPointerException ex) {
                                            JOptionPane.showMessageDialog(rootPane, "Input is null");
                                        }
                                        validInput = true;
                                    }
                                } catch (NumberFormatException ex) {
                                    JOptionPane.showMessageDialog(rootPane, "Input should be number");
                                }
                            }
                            try {
                                appendFile(wuid, wmonthlyallowance - 1);
                            } catch (IOException ex) {
                                JOptionPane.showMessageDialog(rootPane, ex.getMessage());
                            }
//                            loggeduser = new Dependantonspouse(wmonthlyallowance, wname, wrole, wname, wpin, wgender);
                            break;
                        default:
                            break;
                    }
                    new Dashboard(wuid).setVisible(true);
                    dispose();
                } else {
                    JOptionPane.showMessageDialog(rootPane, "UID is already registered!");
                }
            }
        }
    }//GEN-LAST:event_registeruserActionPerformed

    private void registeredActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registeredActionPerformed
        new Login().setVisible(true);
        dispose();
    }//GEN-LAST:event_registeredActionPerformed

    private void rnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rnameKeyPressed
        char c = evt.getKeyChar();
        if(Character.isISOControl(c) || Character.isLetter(c) || Character.isWhitespace(c)){
            rname.setEditable(true);
        }
        else{
            rname.setEditable(false);
        }
    }//GEN-LAST:event_rnameKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton registered;
    private javax.swing.JButton registeruser;
    private java.awt.Choice rgender;
    private javax.swing.JTextField rname;
    private javax.swing.JPasswordField rpin;
    private java.awt.Choice rrole;
    private javax.swing.JTextField ruid;
    // End of variables declaration//GEN-END:variables
}
